/* 
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HiarcSDK.Api;
using HiarcSDK.Model;
using HiarcSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace HiarcSDK.Test
{
    /// <summary>
    ///  Class for testing Entity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EntityTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Entity
        //private Entity instance;

        public EntityTests()
        {
            // TODO uncomment below to create an instance of Entity
            //instance = new Entity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Entity
        /// </summary>
        [Fact]
        public void EntityInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Entity
            //Assert.IsInstanceOfType<Entity> (instance, "variable 'instance' is a Entity");
        }

        /// <summary>
        /// Test deserialize a Classification from type Entity
        /// </summary>
        [Fact]
        public void ClassificationDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a Classification from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new Classification().ToJson()));
        }
        /// <summary>
        /// Test deserialize a LegalHold from type Entity
        /// </summary>
        [Fact]
        public void LegalHoldDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a LegalHold from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new LegalHold().ToJson()));
        }
        /// <summary>
        /// Test deserialize a Collection from type Entity
        /// </summary>
        [Fact]
        public void CollectionDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a Collection from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new Collection().ToJson()));
        }
        /// <summary>
        /// Test deserialize a File from type Entity
        /// </summary>
        [Fact]
        public void FileDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a File from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new File().ToJson()));
        }
        /// <summary>
        /// Test deserialize a Group from type Entity
        /// </summary>
        [Fact]
        public void GroupDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a Group from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new Group().ToJson()));
        }
        /// <summary>
        /// Test deserialize a User from type Entity
        /// </summary>
        [Fact]
        public void UserDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a User from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new User().ToJson()));
        }
        /// <summary>
        /// Test deserialize a RetentionPolicy from type Entity
        /// </summary>
        [Fact]
        public void RetentionPolicyDeserializeFromEntityTest()
        {
            // TODO uncomment below to test deserialize a RetentionPolicy from type Entity
            //Assert.IsInstanceOf<Entity>(JsonConvert.DeserializeObject<Entity>(new RetentionPolicy().ToJson()));
        }

        /// <summary>
        /// Test the property 'Key'
        /// </summary>
        [Fact]
        public void KeyTest()
        {
            // TODO unit test for the property 'Key'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'ModifiedAt'
        /// </summary>
        [Fact]
        public void ModifiedAtTest()
        {
            // TODO unit test for the property 'ModifiedAt'
        }

    }

}
