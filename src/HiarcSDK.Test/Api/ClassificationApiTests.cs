/* 
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HiarcSDK.Client;
using HiarcSDK.Api;
using HiarcSDK.Model;

namespace HiarcSDK.Test
{
    /// <summary>
    ///  Class for testing ClassificationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClassificationApiTests : IDisposable
    {
        private ClassificationApi instance;

        public ClassificationApiTests()
        {
            instance = new ClassificationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClassificationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ClassificationApi
            //Assert.IsType(typeof(ClassificationApi), instance, "instance is a ClassificationApi");
        }

        
        /// <summary>
        /// Test CreateClassification
        /// </summary>
        [Fact]
        public void CreateClassificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateClassificationRequest createClassificationRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.CreateClassification(createClassificationRequest, xHiarcUserKey);
            //Assert.IsType<Classification> (response, "response is Classification");
        }
        
        /// <summary>
        /// Test DeleteClassification
        /// </summary>
        [Fact]
        public void DeleteClassificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.DeleteClassification(key, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test FindClassification
        /// </summary>
        [Fact]
        public void FindClassificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FindClassificationsRequest findClassificationsRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.FindClassification(findClassificationsRequest, xHiarcUserKey);
            //Assert.IsType<List<Classification>> (response, "response is List<Classification>");
        }
        
        /// <summary>
        /// Test GetAllClassifications
        /// </summary>
        [Fact]
        public void GetAllClassificationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xHiarcUserKey = null;
            //var response = instance.GetAllClassifications(xHiarcUserKey);
            //Assert.IsType<List<Classification>> (response, "response is List<Classification>");
        }
        
        /// <summary>
        /// Test GetClassification
        /// </summary>
        [Fact]
        public void GetClassificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetClassification(key, xHiarcUserKey);
            //Assert.IsType<Classification> (response, "response is Classification");
        }
        
        /// <summary>
        /// Test UpdateClassification
        /// </summary>
        [Fact]
        public void UpdateClassificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //UpdateClassificationRequest updateClassificationRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.UpdateClassification(key, updateClassificationRequest, xHiarcUserKey);
            //Assert.IsType<Classification> (response, "response is Classification");
        }
        
    }

}
