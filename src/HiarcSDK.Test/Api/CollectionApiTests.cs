/* 
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HiarcSDK.Client;
using HiarcSDK.Api;
using HiarcSDK.Model;

namespace HiarcSDK.Test
{
    /// <summary>
    ///  Class for testing CollectionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CollectionApiTests : IDisposable
    {
        private CollectionApi instance;

        public CollectionApiTests()
        {
            instance = new CollectionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CollectionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CollectionApi
            //Assert.IsType(typeof(CollectionApi), instance, "instance is a CollectionApi");
        }

        
        /// <summary>
        /// Test AddChildToCollection
        /// </summary>
        [Fact]
        public void AddChildToCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string childKey = null;
            //string xHiarcUserKey = null;
            //var response = instance.AddChildToCollection(key, childKey, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AddFileToCollection
        /// </summary>
        [Fact]
        public void AddFileToCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //AddFileToCollectionRequest addFileToCollectionRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.AddFileToCollection(key, addFileToCollectionRequest, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AddGroupToCollection
        /// </summary>
        [Fact]
        public void AddGroupToCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //AddGroupToCollectionRequest addGroupToCollectionRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.AddGroupToCollection(key, addGroupToCollectionRequest, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AddUserToCollection
        /// </summary>
        [Fact]
        public void AddUserToCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //AddUserToCollectionRequest addUserToCollectionRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.AddUserToCollection(key, addUserToCollectionRequest, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateCollection
        /// </summary>
        [Fact]
        public void CreateCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCollectionRequest createCollectionRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.CreateCollection(createCollectionRequest, xHiarcUserKey);
            //Assert.IsType<Collection> (response, "response is Collection");
        }
        
        /// <summary>
        /// Test DeleteCollection
        /// </summary>
        [Fact]
        public void DeleteCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.DeleteCollection(key, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test FindCollection
        /// </summary>
        [Fact]
        public void FindCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FindCollectionsRequest findCollectionsRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.FindCollection(findCollectionsRequest, xHiarcUserKey);
            //Assert.IsType<List<Collection>> (response, "response is List<Collection>");
        }
        
        /// <summary>
        /// Test GetAllCollections
        /// </summary>
        [Fact]
        public void GetAllCollectionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xHiarcUserKey = null;
            //var response = instance.GetAllCollections(xHiarcUserKey);
            //Assert.IsType<List<Collection>> (response, "response is List<Collection>");
        }
        
        /// <summary>
        /// Test GetCollection
        /// </summary>
        [Fact]
        public void GetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetCollection(key, xHiarcUserKey);
            //Assert.IsType<Collection> (response, "response is Collection");
        }
        
        /// <summary>
        /// Test GetCollectionChildren
        /// </summary>
        [Fact]
        public void GetCollectionChildrenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetCollectionChildren(key, xHiarcUserKey);
            //Assert.IsType<List<Collection>> (response, "response is List<Collection>");
        }
        
        /// <summary>
        /// Test GetCollectionFiles
        /// </summary>
        [Fact]
        public void GetCollectionFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetCollectionFiles(key, xHiarcUserKey);
            //Assert.IsType<List<File>> (response, "response is List<File>");
        }
        
        /// <summary>
        /// Test GetCollectionItems
        /// </summary>
        [Fact]
        public void GetCollectionItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetCollectionItems(key, xHiarcUserKey);
            //Assert.IsType<CollectionItems> (response, "response is CollectionItems");
        }
        
        /// <summary>
        /// Test RemoveFileFromCollection
        /// </summary>
        [Fact]
        public void RemoveFileFromCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string fileKey = null;
            //string xHiarcUserKey = null;
            //var response = instance.RemoveFileFromCollection(key, fileKey, xHiarcUserKey);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test UpdateCollection
        /// </summary>
        [Fact]
        public void UpdateCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //UpdateCollectionRequest updateCollectionRequest = null;
            //string xHiarcUserKey = null;
            //var response = instance.UpdateCollection(key, updateCollectionRequest, xHiarcUserKey);
            //Assert.IsType<Collection> (response, "response is Collection");
        }
        
    }

}
