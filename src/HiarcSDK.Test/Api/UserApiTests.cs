/* 
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using HiarcSDK.Client;
using HiarcSDK.Api;
using HiarcSDK.Model;

namespace HiarcSDK.Test
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserApiTests : IDisposable
    {
        private UserApi instance;

        public UserApiTests()
        {
            instance = new UserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UserApi
            //Assert.IsType(typeof(UserApi), instance, "instance is a UserApi");
        }

        
        /// <summary>
        /// Test CreateUser
        /// </summary>
        [Fact]
        public void CreateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateUserRequest createUserRequest = null;
            //var response = instance.CreateUser(createUserRequest);
            //Assert.IsType<User> (response, "response is User");
        }
        
        /// <summary>
        /// Test DeleteUser
        /// </summary>
        [Fact]
        public void DeleteUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.DeleteUser(key);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test FindUser
        /// </summary>
        [Fact]
        public void FindUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FindUsersRequest findUsersRequest = null;
            //var response = instance.FindUser(findUsersRequest);
            //Assert.IsType<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test GetAllUsers
        /// </summary>
        [Fact]
        public void GetAllUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllUsers();
            //Assert.IsType<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test GetCurrentUser
        /// </summary>
        [Fact]
        public void GetCurrentUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xHiarcUserKey = null;
            //var response = instance.GetCurrentUser(xHiarcUserKey);
            //Assert.IsType<User> (response, "response is User");
        }
        
        /// <summary>
        /// Test GetGroupsForCurrentUser
        /// </summary>
        [Fact]
        public void GetGroupsForCurrentUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xHiarcUserKey = null;
            //var response = instance.GetGroupsForCurrentUser(xHiarcUserKey);
            //Assert.IsType<List<Group>> (response, "response is List<Group>");
        }
        
        /// <summary>
        /// Test GetGroupsForUser
        /// </summary>
        [Fact]
        public void GetGroupsForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string xHiarcUserKey = null;
            //var response = instance.GetGroupsForUser(key, xHiarcUserKey);
            //Assert.IsType<List<Group>> (response, "response is List<Group>");
        }
        
        /// <summary>
        /// Test GetUser
        /// </summary>
        [Fact]
        public void GetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.GetUser(key);
            //Assert.IsType<User> (response, "response is User");
        }
        
        /// <summary>
        /// Test UpdateUser
        /// </summary>
        [Fact]
        public void UpdateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //UpdateUserRequest updateUserRequest = null;
            //var response = instance.UpdateUser(key, updateUserRequest);
            //Assert.IsType<User> (response, "response is User");
        }
        
    }

}
